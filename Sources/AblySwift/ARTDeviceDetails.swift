import Foundation

// swift-migration: original location ARTDeviceDetails.h, line 12 and ARTDeviceDetails.m, line 5
/**
 * Contains the properties of a device registered for push notifications.
 */
public class ARTDeviceDetails: NSObject, NSCopying {
    
    // swift-migration: original location ARTDeviceDetails.h, line 17 and ARTDeviceDetails+Private.h, line 10
    /**
     * A unique ID generated by the device.
     */
    public var id: ARTDeviceId {
        get { return _id }
        set { _id = newValue }
    }
    internal var _id: ARTDeviceId
    
    // swift-migration: original location ARTDeviceDetails.h, line 22 and ARTDeviceDetails+Private.h, line 11
    /**
     * The client ID the device is connected to Ably with.
     */
    public var clientId: String? {
        get { return _clientId }
        set { _clientId = newValue }
    }
    internal var _clientId: String?
    
    // swift-migration: original location ARTDeviceDetails.h, line 27 and ARTDeviceDetails+Private.h, line 12
    /**
     * The `ARTDevicePlatform` associated with the device. Describes the platform the device uses, such as `android` or `ios`.
     */
    public var platform: String {
        get { return _platform }
        set { _platform = newValue }
    }
    internal var _platform: String
    
    // swift-migration: original location ARTDeviceDetails.h, line 32 and ARTDeviceDetails+Private.h, line 13
    /**
     * The `ARTDeviceFormFactor` object associated with the device. Describes the type of the device, such as `phone` or `tablet`.
     */
    public var formFactor: String {
        get { return _formFactor }
        set { _formFactor = newValue }
    }
    internal var _formFactor: String
    
    // swift-migration: original location ARTDeviceDetails.h, line 37 and ARTDeviceDetails+Private.h, line 14
    /**
     * A JSON object of key-value pairs that contains metadata for the device.
     */
    public var metadata: [String: String] {
        get { return _metadata }
        set { _metadata = newValue }
    }
    internal var _metadata: [String: String]
    
    // swift-migration: original location ARTDeviceDetails.h, line 42 and ARTDeviceDetails+Private.h, line 15
    /**
     * The `ARTDevicePushDetails` object associated with the device. Describes the details of the push registration of the device.
     */
    public var push: ARTDevicePushDetails {
        get { return _push }
        set { _push = newValue }
    }
    internal var _push: ARTDevicePushDetails
    
    // swift-migration: original location ARTDeviceDetails.h, line 45 and ARTDeviceDetails.m, line 7
    /// :nodoc:
    public required override init() {
        _push = ARTDevicePushDetails()
        _metadata = [:]
        _id = ""
        _platform = ""
        _formFactor = ""
        super.init()
    }
    
    // swift-migration: original location ARTDeviceDetails.h, line 48 and ARTDeviceDetails.m, line 15
    /// :nodoc:
    public init(id deviceId: ARTDeviceId) {
        _push = ARTDevicePushDetails()
        _metadata = [:]
        _id = deviceId
        _platform = ""
        _formFactor = ""
        super.init()
    }
    
    // swift-migration: original location ARTDeviceDetails.m, line 22
    public func copy(with zone: NSZone?) -> Any {
        let device = type(of: self).init()
        
        device.id = self.id
        device.clientId = self.clientId
        device.platform = self.platform
        device.formFactor = self.formFactor
        device.metadata = self.metadata
        device.push = (self.push.copy() as! ARTDevicePushDetails)
        
        return device
    }
    
    // swift-migration: original location ARTDeviceDetails.m, line 35
    public override var description: String {
        return "\(super.description) - \n\t id: \(self.id); \n\t clientId: \(self.clientId ?? "nil"); \n\t platform: \(self.platform); \n\t formFactor: \(self.formFactor);"
    }
    
    // swift-migration: original location ARTDeviceDetails.m, line 39
    public func isEqual(toDeviceDetail device: ARTDeviceDetails?) -> Bool {
        guard let device = device else {
            return false
        }
        
        let haveEqualDeviceId = self.id == device.id
        let haveEqualClientId = self.clientId == device.clientId
        let haveEqualPlatform = self.platform == device.platform
        let haveEqualFormFactor = self.formFactor == device.formFactor
        
        return haveEqualDeviceId && haveEqualClientId && haveEqualPlatform && haveEqualFormFactor
    }
    
    // swift-migration: original location ARTDeviceDetails.m, line 54
    public override func isEqual(_ object: Any?) -> Bool {
        if self === object as AnyObject? {
            return true
        }
        
        guard let object = object as? ARTDeviceDetails else {
            return false
        }
        
        return isEqual(toDeviceDetail: object)
    }
    
    // swift-migration: original location ARTDeviceDetails.m, line 66
    public override var hash: Int {
        return id.hash ^ (clientId?.hash ?? 0) ^ formFactor.hash ^ platform.hash
    }
}